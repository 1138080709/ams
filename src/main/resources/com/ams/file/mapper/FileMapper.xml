<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ams.file.dao.FileDao">
  <resultMap id="BaseResultMap" type="com.ams.file.entity.File">
    <id column="Id" jdbcType="VARCHAR" property="id" />
    <result column="groupName" jdbcType="VARCHAR" property="groupName" />
    <result column="remoteFileName" jdbcType="VARCHAR" property="remoteFileName" />
    <result column="fileName" jdbcType="VARCHAR" property="fileName" />
    <result column="path" jdbcType="VARCHAR" property="path" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="delFlag" jdbcType="INTEGER" property="delFlag" />
  </resultMap>
  <sql id="Base_Column_List">
    Id, groupName, remoteFileName, fileName, path, author, delFlag
  </sql>
  <select id="getAllPathCount" resultType="java.lang.Integer">
  	select count(distinct path)
  	from file
  	where delFlag=0
  </select>
  <select id="getAllPathList" resultType="java.util.List">
  	select distinct path
  	from file
  	where delFlag=0
  </select>
  <select id="getFileNameById" parameterType="java.lang.String" resultType="java.lang.String">
  	select fileName
  	from file
  	where delFlag=0
  	and Id=#{id,jdbcType=VARCHAR}
  </select>
  <select id="getGroupNameById" parameterType="java.lang.String" resultType="java.lang.String">
  	select groupName
  	from file
  	where delFlag=0
  	and Id=#{id,jdbcType=VARCHAR}
  </select>
  <select id="getRemoteFileName" parameterType="java.lang.String" resultType="java.lang.String">
  	select remoteFileName
  	from file
  	where delFlag=0
  	and Id=#{id,jdbcType=VARCHAR}
  </select>
  <insert id="insertFileList" parameterType="java.util.List">
    insert into file 
    (Id, groupName, remoteFileName, fileName, path, author)
    values 
    <foreach collection="list" item="item" index="index" separator=",">
    	(
    	#{item.id,jdbcType=VARCHAR}, #{item.groupName,jdbcType=VARCHAR}, #{item.remoteFileName,jdbcType=VARCHAR}, 
      	#{item.fileName,jdbcType=VARCHAR}, #{item.path,jdbcType=VARCHAR}, #{item.author,jdbcType=VARCHAR}
      	)
	</foreach>
  </insert>
<!-- 
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from file
    where Id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from file
    where Id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.ams.file.entity.File">
    insert into file (Id, groupName, remoteFileName, 
      fileName, path, delFlag
      )
    values (#{id,jdbcType=VARCHAR}, #{groupname,jdbcType=VARCHAR}, #{remotefilename,jdbcType=VARCHAR}, 
      #{filename,jdbcType=VARCHAR}, #{path,jdbcType=VARCHAR}, #{delflag,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ams.file.entity.File">
    insert into file
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        Id,
      </if>
      <if test="groupname != null">
        groupName,
      </if>
      <if test="remotefilename != null">
        remoteFileName,
      </if>
      <if test="filename != null">
        fileName,
      </if>
      <if test="path != null">
        path,
      </if>
      <if test="delflag != null">
        delFlag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="groupname != null">
        #{groupname,jdbcType=VARCHAR},
      </if>
      <if test="remotefilename != null">
        #{remotefilename,jdbcType=VARCHAR},
      </if>
      <if test="filename != null">
        #{filename,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="delflag != null">
        #{delflag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ams.file.entity.File">
    update file
    <set>
      <if test="groupname != null">
        groupName = #{groupname,jdbcType=VARCHAR},
      </if>
      <if test="remotefilename != null">
        remoteFileName = #{remotefilename,jdbcType=VARCHAR},
      </if>
      <if test="filename != null">
        fileName = #{filename,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        path = #{path,jdbcType=VARCHAR},
      </if>
      <if test="delflag != null">
        delFlag = #{delflag,jdbcType=INTEGER},
      </if>
    </set>
    where Id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ams.file.entity.File">
    update file
    set groupName = #{groupname,jdbcType=VARCHAR},
      remoteFileName = #{remotefilename,jdbcType=VARCHAR},
      fileName = #{filename,jdbcType=VARCHAR},
      path = #{path,jdbcType=VARCHAR},
      delFlag = #{delflag,jdbcType=INTEGER}
    where Id = #{id,jdbcType=VARCHAR}
  </update>
  <resultMap id="BaseResultMap" type="com.ams.file.entity.File">
    <id column="Id" jdbcType="VARCHAR" property="id" />
    <result column="groupName" jdbcType="VARCHAR" property="groupname" />
    <result column="remoteFileName" jdbcType="VARCHAR" property="remotefilename" />
    <result column="fileName" jdbcType="VARCHAR" property="filename" />
    <result column="path" jdbcType="VARCHAR" property="path" />
  </resultMap>
  <sql id="Base_Column_List">
    Id, groupName, remoteFileName, fileName, path
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from file
    where Id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from file
    where Id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.ams.file.entity.File">
    insert into file (Id, groupName, remoteFileName, 
      fileName, path)
    values (#{id,jdbcType=VARCHAR}, #{groupname,jdbcType=VARCHAR}, #{remotefilename,jdbcType=VARCHAR}, 
      #{filename,jdbcType=VARCHAR}, #{path,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ams.file.entity.File">
    insert into file
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        Id,
      </if>
      <if test="groupname != null">
        groupName,
      </if>
      <if test="remotefilename != null">
        remoteFileName,
      </if>
      <if test="filename != null">
        fileName,
      </if>
      <if test="path != null">
        path,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="groupname != null">
        #{groupname,jdbcType=VARCHAR},
      </if>
      <if test="remotefilename != null">
        #{remotefilename,jdbcType=VARCHAR},
      </if>
      <if test="filename != null">
        #{filename,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        #{path,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ams.file.entity.File">
    update file
    <set>
      <if test="groupname != null">
        groupName = #{groupname,jdbcType=VARCHAR},
      </if>
      <if test="remotefilename != null">
        remoteFileName = #{remotefilename,jdbcType=VARCHAR},
      </if>
      <if test="filename != null">
        fileName = #{filename,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        path = #{path,jdbcType=VARCHAR},
      </if>
    </set>
    where Id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ams.file.entity.File">
    update file
    set groupName = #{groupname,jdbcType=VARCHAR},
      remoteFileName = #{remotefilename,jdbcType=VARCHAR},
      fileName = #{filename,jdbcType=VARCHAR},
      path = #{path,jdbcType=VARCHAR}
    where Id = #{id,jdbcType=VARCHAR}
  </update> -->
</mapper>