<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ams.file.dao.FileDao">
	<resultMap id="BaseResultMap" type="com.ams.file.entity.File">
		<result column="Id" jdbcType="VARCHAR" property="id" />
		<result column="groupName" jdbcType="VARCHAR"
			property="groupName" />
		<result column="remoteFileName" jdbcType="VARCHAR"
			property="remoteFileName" />
		<result column="folderName" jdbcType="VARCHAR"
			property="folderName" />
		<result column="description" jdbcType="VARCHAR"
			property="description" />
		<result column="portLevel" jdbcType="INTEGER"
			property="portLevel" />
		<result column="parentId" jdbcType="VARCHAR"
			property="parentId" />
		<result column="isDirectory" jdbcType="INTEGER"
			property="isDirectory" />
		<result column="updator" jdbcType="VARCHAR" property="updator" />
		<result column="updateTime" jdbcType="VARCHAR"
			property="updateTime" />
		<result column="creator" jdbcType="VARCHAR" property="creator" />
		<result column="createTime" jdbcType="VARCHAR"
			property="createTime" />
		<result column="delFlag" jdbcType="INTEGER" property="delFlag" />
	</resultMap>
	<sql id="Base_Column_List">
		Id,groupName,remoteFileName,folderName,description,
		portLevel,parentId,isDirectory,updator,updateTime,
		creator,createTime,delFlag
	</sql>
	<select id="getFolderNameById" parameterType="java.lang.String"
		resultType="java.lang.String">
		select folderName
		from file
		where delFlag=0
		and
		Id=#{id,jdbcType=VARCHAR}
	</select>
	<select id="getRemoteFileName" parameterType="java.lang.String"
		resultType="java.lang.String">
		select remoteFileName
		from file
		where delFlag=0
		and
		Id=#{id,jdbcType=VARCHAR}
	</select>
	<select id="getGroupNameById" parameterType="java.lang.String"
		resultType="java.lang.String">
		select groupName
		from file
		where delFlag=0
		and
		Id=#{id,jdbcType=VARCHAR}
	</select>
	<select id="getAllFileInfo"
		resultType="com.ams.file.entity.File">
		select
		<include refid="Base_Column_List" />
		from file
		where delFlag=0
	</select>
	<select id="getFileById" parameterType="java.lang.String"
		resultType="com.ams.file.entity.File">
		select
		<include refid="Base_Column_List" />
		from file
		where delFlag=0
		and Id=#{id,jdbcType=VARCHAR}
	</select>
	<select id="getFileInfoByParentId"
		parameterType="java.lang.String" resultType="com.ams.file.entity.File">
		select
		<include refid="Base_Column_List" />
		from file
		where delFlag=0
		and parentId=#{id,jdbcType=VARCHAR}
	</select>
	<update id="updateFileInfo"
		parameterType="com.ams.file.entity.File">
		update file
		<set>
			<if test="groupName != null">
				groupName=#{groupName,jdbcType=VARCHAR},
			</if>
			<if test="remoteFileName != null">
				remoteFileName=#{remoteFileName,jdbcType=VARCHAR},
			</if>
			<if test="folderName != null">
				folderName=#{folderName,jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				description=#{description,jdbcType=VARCHAR},
			</if>
			<if test="portLevel != null">
				portLevel=#{portLevel,jdbcType=INTEGER},
			</if>
			<if test="parentId != null">
				parentId=#{parentId,jdbcType=VARCHAR},
			</if>
			<if test="isDirectory != null">
				isDirectory=#{isDirectory,jdbcType=INTEGER},
			</if>
			<if test="updator != null">
				updator=#{updator,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				updateTime=#{updateTime,jdbcType=VARCHAR},
			</if>
			<if test="creator != null">
				creator=#{creator,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				createTime=#{createTime,jdbcType=VARCHAR},
			</if>
		</set>
		where delFlag=0
		and Id=#{id,jdbcType=VARCHAR}
	</update>
	<update id="deleteFileInfo" parameterType="java.lang.String">
		update file
		set
		delFlag=1
		where delFlag=0
		and Id=#{id,jdbcType=VARCHAR}
	</update>
	<insert id="insertFileList" parameterType="java.util.List">
		insert into file(
		Id,
		groupName,
		remoteFileName,
		folderName,
		description,
		portLevel,
		parentId,
		isDirectory,
		updator,
		updateTime,
		creator,
		createTime)
		values
		<foreach collection="list" item="item" index="index"
			separator=",">
			<trim prefix="(" suffix=")" suffixOverrides=",">
					#{item.id,jdbcType=VARCHAR},
					#{item.groupName,jdbcType=VARCHAR},
					#{item.remoteFileName,jdbcType=VARCHAR},
					#{item.folderName,jdbcType=VARCHAR},
					#{item.description,jdbcType=VARCHAR},
					#{item.portLevel,jdbcType=INTEGER},
					#{item.parentId,jdbcType=VARCHAR},
					#{item.isDirectory,jdbcType=INTEGER},
					#{item.updator,jdbcType=VARCHAR},
					#{item.updateTime,jdbcType=VARCHAR},
					#{item.creator,jdbcType=VARCHAR},
					#{item.createTime,jdbcType=VARCHAR},
			</trim>
		</foreach>
	</insert>
</mapper>