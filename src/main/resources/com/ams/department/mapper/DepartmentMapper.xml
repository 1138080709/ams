<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ams.department.dao.DepartmentDao">
	<resultMap id="BaseResultMap"
		type="com.ams.department.entity.Department">
		<id column="Id" property="id" jdbcType="VARCHAR" />
		<result column="departmentName" property="departmentName"
			jdbcType="VARCHAR" />
		<result column="ministerId" property="ministerId"
			jdbcType="VARCHAR" />
		<result column="description" property="description"
			jdbcType="VARCHAR" />
		<result column="createTime" property="createTime"
			jdbcType="VARCHAR" />
		<result column="delFlag" property="delFlag" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		Id, departmentName, ministerId, description, createTime,
		delFlag
	</sql>
	<select id="getDepartmentById"
		resultType="com.ams.department.entity.Department">
		select
		<include refid="Base_Column_List"></include>
		from department
		where delFlag=0
		and Id=#{id,jdbcType=VARCHAR}
	</select>
	<select id="selectDepartmentByName" resultType="com.ams.department.entity.Department">
		select
		<include refid="Base_Column_List"></include>
		from department
		where delFlag=0
		and departmentName=#{departmentName,jdbcType=VARCHAR}
		
	</select>
	<select id="getAlldepartmentList"
		resultType="com.ams.department.entity.Department">
		select
		<include refid="Base_Column_List"></include>
		from department
		where delFlag=0
		<if test="queryInfo != null and queryInfo != ''">
			and departmentName like concat(#{queryInfo},"%")
			or description like concat(#{queryInfo},"%")
			or createTime like concat(#{queryInfo},"%")
		</if>
		LIMIT #{offset},#{limit}
	</select>
	<select id="getDepartmentList"
		resultType="com.ams.department.entity.Department">
		select
		<include refid="Base_Column_List"></include>
		from department
		where delFlag=0
	</select>
	<select id="getAlldepartmentCount"
		resultType="java.lang.Integer">
		select count(*)
		from department
	</select>
	<insert id="insert"
		parameterType="com.ams.department.entity.Department">
		insert into department (Id, departmentName, ministerId,
		description, createTime
		)
		values (#{id,jdbcType=VARCHAR},
		#{departmentName,jdbcType=VARCHAR},
		#{ministerId,jdbcType=VARCHAR},
		#{description,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}
		)
	</insert>
	<update id="updateDelFlagById">
		update department
		set delFlag=1
		where
		Id=#{selectDepartmentId,jdbcType=VARCHAR}
	</update>
	<update id="updateInfoById">
		update department
		<set>
			<if test="departmentName != null and departmentName !=''">
				departmentName=#{departmentName,jdbcType=VARCHAR},
			</if>
			<if test="ministerId != null and ministerId  !=''">
				ministerId=#{ministerId,jdbcType=VARCHAR},
			</if>
			<if test="description != null and description  !=''">
				description=#{description,jdbcType=VARCHAR}
			</if>
		</set>
		where Id=#{id,jdbcType=VARCHAR}
		and delFlag=0
	</update>
</mapper>